#!/usr/bin/bash

##*** instalação da interface NALA para o terminal
echo "deb [arch=amd64,arm64,armhf] http://deb.volian.org/volian/ scar main" | sudo tee /etc/apt/sources.list.d/volian-archive-scar-unstable.list
wget -qO - https://deb.volian.org/volian/scar.key | sudo tee /etc/apt/trusted.gpg.d/volian-archive-scar-unstable.gpg > /dev/null
sudo apt update 

sudo apt install nala -y &&
sudo nala fetch

##** Download da Fonte FiraCode Nerd Font
mkdir -m755 ~/.fonts &&
cd ~/.fonts &&
wget https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/FiraCode.zip &&
unzip FiraCode.zip
rm -rf FiraCode.zip
cd /home/$USER/

##** instalação do zsh
sudo nala install zsh -y && sudo nala update

##** instalação do oh-my-zsh
sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

##** instalação do tema Powerlevel10k
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel10k

##** alterar o tema do ZSH
#sudo nano ~/.zshrc

##altere a linha ZSH_THEME="rubbyrussel"'
##ZSH_THEME="powerlevel10k/powerlevel10k"

##** alterar a linha de plugins para:
# plugins=(git zsh-autosuggestions zsh-syntax-highlighting copypath copyfile copybuffer jsontools)

## adionando plugins úteis
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

sudo nala install gnome-tweaks gnome-shell-extension-manager ca-certificates ubuntu-restricted-extras build-essential -y

sudo nala install snapd gparted preload vsftpd filezilla neofetch vlc gimp redis supervisor lsb-release gnupg2 apt-transport-https software-properties-common -y

sudo nala install numlockx net-tools vim gdebi git curl apache2 tree gnupg dirmngr -y

##*** Instalar o Chrome ***
sudo apt update && sudo apt upgrade &&
sudo wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb &&
sudo mv google-chrome-stable_current_amd64.deb /opt/ &&
sudo gdebi /opt/./google-chrome-stable_current_amd64.deb 

##*** php8.3 ***
sudo add-apt-repository ppa:ondrej/php -y && 
sudo nala update &&
sudo nala install php8.3 libapache2-mod-php8.3 php8.3-dev php8.3-common php8.3-xml php8.3-gd php8.3-opcache php8.3-mbstring php8.3-zip php8.3-mysql php8.3-pgsql php8.3-curl php8.3-xdebug php8.3-redis php8.3-gd unzip -y

## habilitar o mode de reescrita de url do apache
sudo a2enmod rewrite &&
sudo a2dismod mpm_event && 
sudo a2enmod mpm_prefork && 
sudo a2enmod php8.3 && 
sudo systemctl restart apache2

##*** Composer ***
curl -sS https://getcomposer.org/installer | php8.3 && sudo mv composer.phar /usr/local/bin/composer && 
sudo touch /home/$USER/.config/composer/composer.json && 
sudo chown -R $USER: /home/$USER/.config/composer && 
sudo chmod 775 /home/$USER/.config/composer/composer.json

echo '{
	"require": {
		"php": "^8.2",
		"laravel/installer": "^4.5"
	}
}' >> /home/$USER/.config/composer/composer.json

cd /home/$USER/.config/composer/ &&
composer install && 
cd ~

##---Setar variável de ambiente do composer global---
echo 'export PATH="$PATH:$HOME/.config/composer/vendor/bin"' >> ~/.bashrc && 
echo 'export PATH="$PATH:$HOME/.config/composer/vendor/bin"' >> ~/.zshrc && 
source ~/.bashrc && source ~/.zshrc

##--- Atualizar versão do composer ---
#Executar esse comando dentro do diretório /home/$USER/.config/composer
#composer self-update

##*** Instalar o nodejs e o npm
#sudo curl -sL https://deb.nodesource.com/setup_20.x | sudo -E bash -

sudo mkdir -p /etc/apt/keyrings && 
curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg

NODE_MAJOR=20 && 
echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | sudo tee /etc/apt/sources.list.d/nodesource.list

sudo nala install gcc g++ make -y && sudo nala install nodejs npm -y

##*** Instalação do VUE-JS ***
sudo npm install -g @vue/cli

##*** Link para a pasta FTP do Apache ***
sudo mkdir -m755 /var/www/html/ftp -p &&
sudo mkdir -m755 /home/$USER/ftp -p &&
sudo chown -R $USER: /var/www/html/ftp &&
sudo chown -R $USER: /home/$USER/ftp &&
sudo ln -s /var/www/html/ftp /home/$USER/ftp/public

#Acrescentar no final do arquivo /etc/vsftpd.conf
echo 'write_enable=YES' | sudo tee -a /etc/vsftpd.conf &&
echo 'chroot_local_user=YES' | sudo tee -a /etc/vsftpd.conf &&
echo 'allow_writeable_chroot=YES' | sudo tee -a /etc/vsftpd.conf &&
echo 'user_sub_token=$USER' | sudo tee -a /etc/vsftpd.conf &&
echo 'local_root=/home/$USER/ftp/public' | sudo tee -a /etc/vsftpd.conf &&
sudo systemctl restart vsftpd

##*** Instalar PostgreSQL ***
sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && 
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - && 
sudo nala update && sudo nala install postgresql -y

##*** Acessar pelo terminal
#sudo su postgres -c psql postgres

##*** Alterar a senha para o usuário
#ALTER USER postgres WITH PASSWORD 'postgres';

##** Instalar o PgAdmin4
sudo curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add &&
sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/jammy pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list && apt update' && 
sudo nala install pgadmin4 -y

##*** Habilitar o firewall na inicialização do sistema ***
sudo nala install gufw -y &&
sudo ufw enable && 
sudo ufw default deny incoming && sudo ufw default allow outgoing

#Permissão para as portas
sudo ufw allow 21/tcp &&
sudo ufw allow 22/tcp &&
sudo ufw allow 80/tcp &&
sudo ufw allow 8080/tcp &&
sudo ufw allow 443/tcp &&
sudo ufw allow 8443/tcp &&
sudo ufw status verbose

##*** Instalar acesso seguro - servidor (ssh) ***
sudo nala install -y openssh-server && 
sudo systemctl enable ssh && sudo systemctl restart ssh

*** Instalar Mysql Server ***
sudo nala install mysql-server mysql-client -y

#sudo mysql -u root -p
#CREATE USER 'novousuario'@'localhost' IDENTIFIED BY 'password';
#GRANT ALL PRIVILEGES ON * . * TO 'novousuario'@'localhost';
#FLUSH PRIVILEGES;
#\q

#Permissão para usuário root entrar sem utilizar o sudo
#sudo mysql -u root -p
#ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '';
# OR
#ALTER USER 'root'@'localhost' IDENTIFIED BY '';
#FLUSH PRIVILEGES;
#\q 

##** instalação do phpmyadmin
sudo nala install phpmyadmin -y

##** montar partições NTFS no linux
sudo mkdir -m775 /media/arquivos -p &&
sudo chown -R $USER: /media/arquivos/ &&
echo "UUID=0EF00CA20EF00CA2 /media/arquivos/ ntfs-3g defaults 0 0" | sudo tee -a /etc/fstab

##** instalação do grub-customizer
sudo wget https://launchpadlibrarian.net/570407966/grub-customizer_5.1.0-3build1_amd64.deb && 
sudo gdebi grub-customizer*

##*** Instalar o BOOT REPAIR ***
sudo add-apt-repository ppa:yannubuntu/boot-repair -y && 
sudo nala update && 
sudo nala install boot-repair -y

##*** Instalação do MinIO
wget https://dl.min.io/server/minio/release/linux-amd64/minio &&
sudo chmod +x minio &&
sudo mv minio /usr/local/bin &&
sudo useradd -r minio-user -s /sbin/nologin &&
sudo chown minio-user:minio-user /usr/local/bin/minio &&
sudo mkdir /usr/local/share/minio &&
sudo chown minio-user:minio-user /usr/local/share/minio &&
sudo mkdir /etc/minio &&
sudo chown -R minio-user:minio-user /etc/minio

#sudo nano /etc/default/minio
echo 'MINIO_VOLUMES="/usr/local/share/minio/"' | sudo tee -a /etc/default/minio
echo 'MINIO_OPTS="127.0.0.1:9000"' | sudo tee -a /etc/default/minio
echo 'MINIO_ACCESS_KEY="admin"' | sudo tee -a /etc/default/minio
echo 'MINIO_SECRET_KEY="admin"' | sudo tee -a /etc/default/minio

curl -O https://raw.githubusercontent.com/minio/minio-service/master/linux-systemd/minio.service

# nano minio.service
sudo mv minio.service /etc/systemd/system

sudo ufw enable && 
sudo ufw allow 9000/tcp

sudo systemctl daemon-reload
sudo systemctl enable minio
sudo systemctl start minio

##*** Instalação do Docker
sudo nala update &&
sudo mkdir -p /etc/apt/keyrings && 
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg && 
echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && 
sudo nala update &&
sudo nala install docker-ce docker-ce-cli containerd.io docker-compose-plugin -y && 
sudo groupadd docker && 
sudo usermod -aG docker $USER && newgrp docker

##** Instalação de DRIVERS SQL-SERVER para o PHP
sudo curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && 
sudo curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list > sudo tee -a /etc/apt/sources.list.d/mssql-release.list

sudo apt-get update
sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17
# optional: for bcp and sqlcmd
sudo ACCEPT_EULA=Y apt-get install -y mssql-tools
echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
source ~/.bashrc
# optional: for unixODBC development headers
sudo apt install -y unixodbc-dev && 
sudo pecl install sqlsrv && sudo pecl install pdo_sqlsrv

echo "; priority=20\nextension=sqlsrv.so\n" | sudo tee -a /etc/php/8.2/mods-available/sqlsrv.ini && 
echo "; priority=30\nextension=pdo_sqlsrv.so\n" | sudo tee -a /etc/php/8.2/mods-available/pdo_sqlsrv.ini

sudo phpenmod sqlsrv pdo_sqlsrv && sudo systemctl restart apache2

sudo touch /var/www/html/phpinfo.php && 
echo "<?php phpinfo(); ?>" | sudo tee -a /var/www/html/phpinfo.php

sudo nala update && sudo nala upgrade -y && 
sudo nala autoremove -y

##** setar a variável globais
echo 'export PATH="$PATH:$HOME/.config/composer/vendor/bin"' >> ~/.zshrc 
echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.zshrc

